{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww35640\viewh21840\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #create shp file for all the sample location in QGIS with the same CRS of the LiDAR dataset.\
\
library(lidR)\
library(sf)\
\
# Define the path to the directory containing the shapefiles\
shapefile_directory <- "D:/WheatDryFACE/AfterSowing/" #Put in your own directory location\
\
# List the shapefiles in the directory\
shapefile_list <- list.files(path = shapefile_directory, pattern = ".shp", full.names = TRUE)\
\
# Read the LiDAR catalog\
ctg <- readLAScatalog("D:/WheatDryFACE/AfterSowing/E.las") #Put in your own .las location\
\
# Itterate through each shapefile and perform the clip operation\
for (shp_file in shapefile_list) \{\
  # Read the shapefile\
  shp <- st_read(shp_file)\
  \
  # Check if the shapefile has any empty geometries\
  if (any(st_is_empty(shp))) \{\
    cat("Skipping shapefile with empty geometries:", shp_file, "\\n")\
    next  # Skip the current iteration\
  \}\
  \
  # Set the output file names based on the shapefile's name and save them\
  output_names <- paste0(gsub(".shp", "", basename(shp_file)), "_split_\{ID\}")\
  opt_output_files(ctg) <- file.path(shapefile_directory, output_names)\
  \
  # Perform the clip operation\
  new_ctg <- clip_roi(ctg, shp)\
\}\
\
}